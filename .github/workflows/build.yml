name: Build and Package QEMU for Raspberry Pi 4 Emulation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_package:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install build dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential \
          git \
          libtool \
          pkg-config \
          libglib2.0-dev \
          libfdt-dev \
          libpixman-1-dev \
          zlib1g-dev \
          libssl-dev \
          libncurses5-dev \
          libcap-dev \
          libsnappy-dev \
          libsdl2-dev \
          libaio-dev \
          libbluetooth-dev \
          libusb-1.0-0-dev \
          libvirt-dev \
          libspice-server-dev \
          libnfs-dev \
          libudev-dev \
          libpng-dev \
          libjpeg-dev \
          libglib2.0-dev \
          libgpgme11-dev \
          libpciaccess-dev \
          libvhost-user-dev \
          libvhost-dev \
          libcapstone-dev \
          libseccomp-dev \
          libzstd-dev \
          libglvnd-dev \
          libgl1-mesa-dev \
          libegl1-mesa-dev \
          libgles2-mesa-dev \
          dpkg-dev \
          fakeroot \
          devscripts \
          debhelper \
          qemu-user-static \
          qemu-system-aarch64 \
          binfmt-support

    - name: Clone QEMU repository
      run: |
        git clone https://gitlab.com/qemu-project/qemu.git
        cd qemu

    - name: Checkout QEMU 9.2.0
      run: |
        cd qemu
        git checkout v9.2.0  # Checkout the specific version

    - name: Configure QEMU with ARM and VirtIO
      run: |
        cd qemu
        ./configure \
          --target-list=aarch64-softmmu \
          --enable-kvm \
          --enable-sdl \
          --enable-vnc \
          --enable-virtio \
          --enable-virtio-vga \
          --enable-virgl \
          --enable-spice

    - name: Build QEMU
      run: |
        cd qemu
        make -j$(nproc)

    - name: Prepare Raspberry Pi 4 Emulation Files
      run: |
        # Download and prepare the Raspberry Pi 4 kernel and rootfs
        mkdir -p ~/rpi4-emulation
        cd ~/rpi4-emulation
        # Download the Raspberry Pi kernel and rootfs (or use Buildroot to generate them)
        wget https://github.com/raspberrypi/firmware/raw/master/boot/kernel7l.img -O kernel.img
        # Download the Raspberry Pi 4 root file system (could be a minimal Linux distro for ARM)
        wget https://github.com/raspberrypi/raspbian-image/raw/master/rootfs.img -O rootfs.img
        # Optional: You can use Buildroot to create a custom ARM rootfs for Pi 4.

    - name: Prepare Packaging Files
      run: |
        cd qemu
        mkdir -p debian
        echo "Source: qemu" > debian/control
        echo "Section: utils" >> debian/control
        echo "Priority: optional" >> debian/control
        echo "Maintainer: Your Name <your.email@example.com>" >> debian/control
        echo "Build-Depends: debhelper (>= 12), build-essential" >> debian/control
        echo "Standards-Version: 4.5.0" >> debian/control
        echo "Package: qemu" >> debian/control
        echo "Architecture: amd64" >> debian/control
        echo "Depends: \${shlibs:Depends}, \${misc:Depends}" >> debian/control
        echo "Description: QEMU Emulator for ARM" >> debian/control
        echo " QEMU is a generic and open-source machine emulator and virtualizer." >> debian/control
        echo "Homepage: https://www.qemu.org/" >> debian/control
        echo "Original-Maintainer: QEMU Project <qemu-devel@nongnu.org>" >> debian/control
        echo "Vcs-Git: https://gitlab.com/qemu-project/qemu.git" >> debian/control
        echo "Vcs-Browser: https://gitlab.com/qemu-project/qemu" >> debian/control
        echo "Download-Size: 10000000" >> debian/control

        # Add additional packaging configuration
        echo "DEB_BUILD_MAINT_OPTIONS = hardening=+all" >> debian/rules
        chmod +x debian/rules

    - name: Build the Debian Package
      run: |
        cd qemu
        dpkg-buildpackage -us -uc

    - name: Install the Debian Package
      run: |
        cd qemu
        sudo dpkg -i ../qemu_*.deb

    - name: Run Raspberry Pi 4 Emulation
      run: |
        qemu-system-aarch64 \
          -M raspi4 \
          -kernel ~/rpi4-emulation/kernel.img \
          -drive file=~/rpi4-emulation/rootfs.img,format=raw,if=virtio \
          -m 2G \
          -serial stdio \
          -append "root=/dev/vda2 console=ttyAMA0" \
          -net nic -net user

